[{"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\index.tsx":"1","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\reportWebVitals.ts":"2","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\App.tsx":"3","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\NavBar.tsx":"4","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\store\\AppSlice.ts":"5","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\store\\store.ts":"6","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\Routing.tsx":"7","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Carts\\Carts.tsx":"8","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\Home.tsx":"9","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Products\\Product.tsx":"10","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Carts\\EmptyCardComp\\Empty.tsx":"11","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Carts\\CartTable.tsx":"12","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\Carousel.tsx":"13","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\ProductCard.tsx":"14","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\Testominial.tsx":"15","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Footers\\Footer.tsx":"16"},{"size":622,"mtime":1611442726318,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1606657338598,"results":"19","hashOfConfig":"18"},{"size":176,"mtime":1611443292067,"results":"20","hashOfConfig":"18"},{"size":1755,"mtime":1611956121255,"results":"21","hashOfConfig":"18"},{"size":1953,"mtime":1611449307515,"results":"22","hashOfConfig":"18"},{"size":5530,"mtime":1611961275486,"results":"23","hashOfConfig":"18"},{"size":664,"mtime":1611443264010,"results":"24","hashOfConfig":"18"},{"size":2639,"mtime":1612032200783,"results":"25","hashOfConfig":"18"},{"size":419,"mtime":1612019308385,"results":"26","hashOfConfig":"18"},{"size":1898,"mtime":1612032690405,"results":"27","hashOfConfig":"18"},{"size":1234,"mtime":1611524645749,"results":"28","hashOfConfig":"18"},{"size":8952,"mtime":1612031751020,"results":"29","hashOfConfig":"18"},{"size":1870,"mtime":1611957623586,"results":"30","hashOfConfig":"18"},{"size":2127,"mtime":1612027108399,"results":"31","hashOfConfig":"18"},{"size":6596,"mtime":1612032562254,"results":"32","hashOfConfig":"18"},{"size":1181,"mtime":1612035595228,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1qrvod1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\index.tsx",[],["74","75"],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\reportWebVitals.ts",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\App.tsx",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\NavBar.tsx",["76"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProductsItem } from './store/store';\r\nimport { useSelector } from 'react-redux';\r\nimport \"./NavBar.css\"\r\nimport icon from \"../src/images/perfume.png\"\r\nimport Badge from '@material-ui/core/Badge';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n const products = useSelector((state: ProductsItem[]) => state)\r\n const total = products.reduce((prev, item) =>  prev + item.price * item.quantity,0)\r\n\r\n  return (\r\n    <div id=\"navbar\">\r\n      <AppBar position=\"static\" style={{ background: \"#0f3057\", flex: 1 }}>\r\n        <Toolbar>\r\n        \r\n          <Typography variant=\"h6\" className=\"title\"  style={{ flex: 1}}>\r\n          <img src={icon} alt=\"logo\"  width=\"40px\" height=\"40px\"/><span className=\"logo\">eFragrance Store</span>\r\n          </Typography>\r\n          <div className=\"nav-link\">\r\n          <Link to=\"/\">\r\n          <Button color=\"inherit\">Home</Button>\r\n          </Link>\r\n          <Link to=\"/products\">\r\n          <Button color=\"inherit\">Products</Button>\r\n          </Link>\r\n          <Link to=\"/cart\">\r\n          <Button color=\"inherit\">\r\n          <Badge badgeContent={total <= 1 ? 0 : `$${total}` } color=\"primary\">\r\n          Cart\r\n      </Badge></Button>\r\n          </Link>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\store\\AppSlice.ts",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\store\\store.ts",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\Routing.tsx",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Carts\\Carts.tsx",["77"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ProductsItem } from \"../../store/store\";\r\nimport Empty from \"./EmptyCardComp/Empty\";\r\nimport \"./Carts.css\";\r\nimport CartTable from \"./CartTable\";\r\nimport { Button, Fade, Grid } from \"@material-ui/core\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountUp from \"react-countup\";\r\nimport Footer from \"../Footers/Footer\";\r\n\r\nfunction Carts() {\r\n  const Products = useSelector((state: ProductsItem[]) => state);\r\n  const total = Products.reduce(\r\n    (prev, item) => prev + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"heading\">\r\n        <h1>Shopping Cart</h1>\r\n        <hr />\r\n      </div>\r\n      <div>\r\n        {Products.filter((product) => product.added).length === 0 ? (\r\n          <Empty />\r\n        ) : (\r\n          \" \"\r\n        )}\r\n      </div>\r\n      {Products.filter((product) => product.added).length === 0 ? (\r\n        \" \"\r\n      ) : (\r\n        <div style={{paddingBottom: \"100px\", }}>\r\n          <div className=\"total-div\">\r\n            <div>\r\n        \r\n            </div>\r\n            <h2 >\r\n               Subtotal :\r\n                        <Grid item xs={12} md={6} lg={4} className=\" text-center \">\r\n                            <div className=\"display-4 font-weight-bold py-2\">\r\n                                <CountUp\r\n                                    start={0}\r\n                                    end={total}\r\n                                    duration={5}\r\n                                    delay={2}\r\n                                    separator=\" \"\r\n                                    decimals={2}\r\n                                    decimal=\".\"\r\n                                    prefix=\"$ \"\r\n                                    suffix=\"\"\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n            </h2>\r\n            <hr />\r\n            <Button variant=\"outlined\" color=\"primary\">\r\n              <span>\r\n                <PaymentIcon />{\" \"}\r\n              </span>{\" \"}\r\n              CHECKOUT\r\n            </Button>\r\n\r\n            <Link to=\"/products\">\r\n              <Button>\r\n                <span>\r\n                  <ShoppingCartIcon />{\" \"}\r\n                </span>\r\n                CONTINUE SHOPPING\r\n              </Button>\r\n            </Link>\r\n            <hr />\r\n          </div>\r\n          <CartTable />\r\n        </div>\r\n      )}\r\n      <Footer/>\r\n    </>\r\n  );\r\n}\r\nexport default Carts;\r\n","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\Home.tsx",["78"],"import React, { useState } from 'react'\r\nimport Footer from '../Footers/Footer'\r\nimport CarouselSlider from \"./Carousel\"\r\nimport ProductCard from './ProductCard'\r\nimport Testimonial from './Testominial'\r\n\r\nexport default function Home() {\r\n  \r\n    return (\r\n        <div>\r\n            <CarouselSlider/>\r\n            <ProductCard/>\r\n            <Testimonial/>\r\n            <Footer/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Products\\Product.tsx",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Carts\\EmptyCardComp\\Empty.tsx",["79"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { ProductsItem } from '../../../store/store';\r\nimport \"./empty.css\";\r\n\r\n\r\nexport default function Empty() {\r\n    const Products = useSelector((state: ProductsItem[]) => state);\r\n    const total = Products.reduce((prev, item) =>  prev + item.price * item.quantity,0)\r\n    return (\r\n        <div className=\"container-fluid mt-100\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card12\">\r\n                  \r\n                    <div className=\"card-body cart\">\r\n                        <div className=\"col-sm-12 empty-cart-cls text-center\"> <img src=\"https://i.imgur.com/dCdflKN.png\" width=\"130\" height=\"130\" className=\"img-fluid mb-4 mr-3\" alt=\"cart\"/>\r\n                            <h3><strong>Your Cart is Empty</strong></h3>\r\n                            <h4>Add something to make me happy :)</h4> <Link to=\"/products\" className=\"btn btn-primary cart-btn-transform m-3\" data-abc=\"true\">continue shopping</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Carts\\CartTable.tsx",["80","81","82","83"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ProductsItem } from \"../../store/store\";\r\nimport \"./Carts.css\";\r\nimport { add, clear, remove, store } from \"../../store/AppSlice\";\r\nimport { Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      backgroundColor: \"#0f3057\",\r\n      color: \"#eff7e1\",\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      margin: 20,\r\n\r\n    },\r\n  })\r\n);\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n      margin: 0,\r\n      position: \"relative\",\r\n      width: \"1000px\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function CartTable() {\r\n  const classes1 = useStyles();\r\n  const [modal1, setModal1] = React.useState(false);\r\n  const toggle1 = () => {\r\n    setModal1(!modal1)\r\n  };\r\n\r\n  const toggleClose = () => {\r\n    setModal1(false)\r\n  }\r\n\r\n\r\n\r\n  const Products = useSelector((state: ProductsItem[]) => state);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead className=\"tabel-row\">\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell align=\"left\">Products Detail</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Products.filter((product) => product.added).map((item) => (\r\n            <div key={item.id}>\r\n              <TableRow className={classes.root}>\r\n                <TableCell>\r\n                  <IconButton\r\n                    aria-label=\"expand row\"\r\n                    size=\"small\"\r\n                    onClick={() => setOpen(!open)}\r\n                  >\r\n                    {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  style={{ float: \"left\" }}\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                >\r\n                  {item.name}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"right\">{item.size}</TableCell>\r\n                <TableCell align=\"right\">{item.launched}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <div>\r\n                    <IconButton aria-label=\"delete\">\r\n                      <DeleteIcon onClick={toggle1} />\r\n                    </IconButton>\r\n                <Dialog open={modal1} onClose={toggle1}>\r\n                    <div className=\"text-center p-5\">\r\n                        <div className=\"avatar-icon-wrapper rounded-circle m-0\">\r\n                            <div className=\"d-inline-flex justify-content-center p-0 rounded-circle avatar-icon-wrapper bg-neutral-success text-success m-0 d-130\">\r\n                                <FontAwesomeIcon icon={['far', 'lightbulb']} className=\"d-flex align-self-center display-3\"/>\r\n                            </div>\r\n                        </div>\r\n                        <h4 className=\"font-weight-bold mt-4\">Do you want to delete this item?</h4>\r\n                        <p className=\"mb-0 font-size-lg text-muted\">Please Select One Option.</p>\r\n                        <div className=\"pt-4\">\r\n                            <Button onClick={() => {\r\n                              store.dispatch(clear(item))\r\n                              toggleClose()\r\n                              }} variant=\"outlined\" color=\"secondary\" className=\"mx-1\">\r\n                                    <span className=\"btn-wrapper--label\">\r\n                                        Confirm\r\n                </span>\r\n                            </Button>\r\n                            <Button onClick={toggle1} color=\"primary\" variant=\"contained\" className=\"mx-1\">\r\n                                    <span className=\"btn-wrapper--label\">\r\n                                        Cancle\r\n                </span>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell\r\n                  style={{ paddingBottom: 0, paddingTop: 0 }}\r\n                  colSpan={6}\r\n                >\r\n                  <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <Box margin={1}>\r\n                      <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                        Product # {item.id}\r\n                      </Typography>\r\n                      <Table size=\"small\" aria-label=\"purchases\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell>image</TableCell>\r\n                            <TableCell>Brand</TableCell>\r\n                            <TableCell>Price</TableCell>\r\n                            <TableCell align=\"center\">Quantity</TableCell>\r\n                            <TableCell align=\"right\">Total price ($)</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              <img\r\n                                src={item.imgUrl}\r\n                                width=\"100px\"\r\n                                height=\"100px\"\r\n                                alt=\"img\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {item.brand}\r\n                            </TableCell>\r\n                            <TableCell>${item.price}</TableCell>\r\n                            <TableCell align=\"center\">\r\n                              <div className=\"quantity buttons_added\">\r\n                                <input\r\n                                  type=\"button\"\r\n                                  value=\"-\"\r\n                                  className=\"minus\"\r\n                                  onClick={() => store.dispatch(remove(item))}\r\n                                />\r\n                                <input\r\n                                  step=\"1\"\r\n                                  min=\"1\"\r\n                                  max=\"\"\r\n                                  name=\"quantity\"\r\n                                  value={item.quantity}\r\n                                  title=\"Qty\"\r\n                                  className=\"input-text qty text\"\r\n                                  pattern=\"\"\r\n                                />\r\n                                <input\r\n                                  type=\"button\"\r\n                                  value=\"+\"\r\n                                  className=\"plus\"\r\n                                  onClick={() => store.dispatch(add(item))}\r\n                                />\r\n                              </div>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                              ${item.price * item.quantity}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Box>\r\n                  </Collapse>\r\n                </TableCell>\r\n              </TableRow>\r\n            </div>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\Carousel.tsx",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\ProductCard.tsx",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Home\\Testominial.tsx",[],"C:\\Users\\JJ\\Desktop\\Redux App\\Shopping basket project redux toolkit\\shopping-cart-redux-toolkit\\src\\components\\Footers\\Footer.tsx",["84","85","86","87","88"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Divider } from '@material-ui/core'\r\nimport React, { Fragment } from 'react'\r\nimport { Button, Tooltip } from 'react-bootstrap'\r\nimport icon from \"../../images/perfume.png\"\r\nimport \"./Footer.css\"\r\nexport default function Footer() {\r\n    const date = new Date().getFullYear()\r\n    return (\r\n        <div className=\"main-div\">\r\n            <div className=\"footer-div\">\r\n                      <img src={icon} alt=\"logo\"  width=\"60px\" height=\"60px\"/>\r\n                      <span className=\"logo\">eFragrance Store</span>\r\n                      <div className=\"contact-details\">\r\n                      <h4>Contact Details</h4>\r\n                      <h6>North Nazimabad, Karachi</h6>\r\n                      <h6>0310-3477737</h6>\r\n                      <h6>order@efragrance.pk</h6>\r\n                      <h6>www.efragrance.com</h6>\r\n                      <h6>Mon-Sat / 9:00 AM - 8:00 PM</h6>\r\n\r\n                      </div>\r\n                      <p>© 2020-{date} eFragrance All Rights Reserved.</p>\r\n                      </div>\r\n                      \r\n\r\n                      \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n",["89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":23,"column":9,"nodeType":"97","messageId":"98","endLine":23,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":7,"column":18,"nodeType":"97","messageId":"98","endLine":7,"endColumn":22},{"ruleId":"95","severity":1,"message":"100","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"101","line":10,"column":11,"nodeType":"97","messageId":"98","endLine":10,"endColumn":16},{"ruleId":"95","severity":1,"message":"102","line":21,"column":8,"nodeType":"97","messageId":"98","endLine":21,"endColumn":13},{"ruleId":"95","severity":1,"message":"103","line":22,"column":8,"nodeType":"97","messageId":"98","endLine":22,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":23,"column":8,"nodeType":"97","messageId":"98","endLine":23,"endColumn":12},{"ruleId":"95","severity":1,"message":"104","line":60,"column":9,"nodeType":"97","messageId":"98","endLine":60,"endColumn":17},{"ruleId":"95","severity":1,"message":"105","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"106","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":17},{"ruleId":"95","severity":1,"message":"107","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":25},{"ruleId":"95","severity":1,"message":"108","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":16},{"ruleId":"95","severity":1,"message":"109","line":4,"column":18,"nodeType":"97","messageId":"98","endLine":4,"endColumn":25},{"ruleId":"91","replacedBy":"110"},{"ruleId":"93","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'Fade' is defined but never used.","'useState' is defined but never used.","'total' is assigned a value but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'classes1' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'Divider' is defined but never used.","'Fragment' is defined but never used.","'Button' is defined but never used.","'Tooltip' is defined but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation"]